[build-system]
requires = ["setuptools>=64.0.0", "versioningit"]
build-backend = "setuptools.build_meta"

[project]
name = "caf.toolkit"
dynamic = ["version"]
description = "A toolkit of transport planning and appraisal functionalities"
readme = "README.md"
license = {"file"= "LICENSE.md"}
requires-python = ">=3.9"
authors = [
    { name = "Transport for the North" },
]
classifiers = [
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
]
dependencies = [
    "numba>=0.56.4",
    "numpy>=1.19.0, <1.25.0",
    "pandas>=1.4.0",
    "psutil>=5.9.0",
    "pydantic>=1.10, <2.0.0",
    "sparse>=0.13.0",
    "strictyaml>=1.6, <2.0.0",
    "tqdm>=4.50.2",
]

[project.optional-dependencies]
testing = [
    "mypy>=0.910",
    "mypy_extensions>=0.4.3",
    "psutil>=5.9.0",
    "pydocstyle>=6.1.1",
    "pydocstyle[toml]",
    "pylint>=2.14.5",
    "pytest-cov~=2.12.1",
    "pytest~=7.1.2",
    "tox~=3.24.3",
]

[project.urls]
"Bug Tracker" = "https://github.com/Transport-for-the-North/caf.toolkit/issues"
Homepage = "https://github.com/Transport-for-the-North/caf.toolkit"
Source = "https://github.com/Transport-for-the-North/caf.toolkit"

[tool.setuptools.packages.find]
where = ["src"]

#[tool.setuptools.dynamic]
#version = {attr = "caf.toolkit.__version__"}

[tool.black]
line-length = 95
target-version = ['py39']
extend-exclude = '''
(
  _version\.py
  | versioneer\.py
)
'''

[tool.pylint.messages_control]
disable = [
    "line-too-long",    # Compatibility with black
    "too-many-lines",
    "use-dict-literal",
    "use-list-literal",
]

# Pylint settings
[tool.pylint.basic]
good-names = ["df", "fn", "ca", "tp", "to", "x", "x1", "x2", "i", "f", "q"]
extension-pkg-allow-list = ["pydantic"]

[tool.pylint.main]
ignore = ["__init__.py", "_version.py", "versioneer.py"]

[tool.pylint.design]
max-args = 10
max-attributes = 15
max-statements = 100

[tool.mypy]
packages = ["caf.toolkit"]
namespace_packages = true
ignore_missing_imports = true
allow_redefinition = true

[[tool.mypy.overrides]]
module = [
  "caf.toolkit._version",
]
ignore_errors = true

[tool.pydocstyle]
convention = "numpy"
match = '(?!_test)(?!test_)(?!__init__).*\.py'
add-ignore = [
    "D202",    # Temporary compatibility with black
]

[tool.pytest.ini_options]
addopts = '--cov=caf.toolkit --cov-report=xml --doctest-modules -n auto'
doctest_optionflags = "NORMALIZE_WHITESPACE"
markers = [
    "serial: marks tests to not run in parallel",
]

[tool.coverage.run]
omit = ["*/_version.py"]

[tool.versioningit.vcs]
method = "git"
match = ["v*"]
default-tag = "0.0.1"

[tool.versioningit.format]
distance = "{base_version}+{distance}.{vcs}{rev}"
dirty = "{base_version}+{distance}.{vcs}{rev}.dirty"
distance-dirty = "{base_version}+{distance}.{vcs}{rev}.dirty"

[tool.versioneer]
VCS = "git"
style = "pep440"
versionfile_source = "src/caf/toolkit/_version.py"
versionfile_build = "caf/toolkit/_version.py"
tag_prefix = "v"